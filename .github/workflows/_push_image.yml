name: Push Image

on:
  workflow_call:
    inputs:
      repo_type:
        description: "Azure Container Registry to push the image to"
        required: true
        type: string
      image:
        description: "Image to push"
        required: true
        type: string
      tag:
        description: "Tag to push the image with"
        required: true
        type: string
      docker_context:
        description: "Docker Context to Use"
        required: true
        type: string
      dockerfile_path:
        description: "Docker File Path"
        required: true
        type: string

permissions:
  id-token: write
  contents: read
  attestations: write
  packages: write

jobs:
  push-example-image:
    name: Push Image (${{ inputs.image }})
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # needed to avoid a bug where imageId and digest output are the same
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.18.0

      - name: Download ORAS CLI
        uses: oras-project/setup-oras@v1

      - name: Log into Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Set Azure Registry
        run: |
          echo "AZURE_REG_NAME=${{ inputs.repo_type == 'public' && secrets.AZURE_REGISTRY_NAME || inputs.repo_type == 'private' && secrets.TEST_AZURE_REGISTRY_NAME }}" >> $GITHUB_ENV
          echo "AZURE_REG_URL=${{ inputs.repo_type == 'public' && secrets.AZURE_REGISTRY_URL || inputs.repo_type == 'private' && secrets.TEST_AZURE_REGISTRY_URL }}" >> $GITHUB_ENV

      - name: Log in to Azure Container Registry
        run: az acr login --name $AZURE_REG_NAME

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        id: build-image
        with:
          context: ${{ inputs.docker_context }}
          file: ${{ inputs.dockerfile_path }}/Dockerfile
          push: true
          tags: ${{ env.AZURE_REG_URL }}/${{ inputs.image }}:${{ inputs.tag }}

      - name: Generate Artifact Attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.AZURE_REG_URL }}/${{ inputs.image }}
          subject-digest: '${{steps.build-image.outputs.digest}}'
          push-to-registry: true

      - name: Add End of Life Annotation
        run: |
          #get EOL date one month from now
          EOL_DATE=$(date -u -d "+1 month" +"%Y-%m-%dT%H:%M:%SZ")

          oras attach --artifact-type "application/vnd.microsoft.artifact.lifecycle" \
            --annotation "vnd.microsoft.artifact.lifecycle.end-of-life.date=$EOL_DATE" \
            $AZURE_REG_URL/${{ inputs.image }}@${{steps.build-image.outputs.digest}}